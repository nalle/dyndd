---
- name: Install required packages
  action: apt 
    pkg={{item}} 
    state=installed
  with_items:
    - git
    - gcc
    - make
    - autoconf
    - automake
    - python-dev 
    - libmysqlclient-dev 
    - python-pip
  become: true

- name: Cleanup before we start
  file:
    path={{ project_path }}
    state=absent
  become: true

- name: Creating package
  local_action: shell (cd ..; python setup.py sdist)

- name: Create target directory
  file:
    path=/tmp/dyndd
    state=directory
    mode=0755

- name: Unpack tarball
  unarchive:
    src="../dist/dyndd-{{dyndd_version}}.tar.gz"
    dest="{{project_path}}"

- name: Install package
  shell: "python setup.py install" 
  args: 
    chdir: "{{ project_path }}/dyndd-{{dyndd_version}}"
  become: true

- name: Check if we need to install config 
  stat: path=/etc/dyndd/dyndd.conf
  register: install_config

- name: Create configuration directory
  file: 
    path=/etc/dyndd
    state=directory 
    mode=0755
  when: install_config.stat.exists == False

- name: Copy configuration file
  shell: "cp /tmp/dyndd/dyndd-{{dyndd_version}}/config/dyndd.conf /etc/dyndd/dyndd-{{dyndd_version}}/dyndd.conf"
  when: install_config.stat.exists == False
  become: true

- name: Copy bin file
  shell: "cp /tmp/dyndd/dyndd-{{dyndd_version}}/bin/dyndd /usr/bin/dyndd"
  become: true

- name: Copy logrotate file
  shell: "cp /tmp/dyndd/dyndd-{{dyndd_version}}/logrotate.d/dyndd /etc/logrotate.d/dyndd"
  become: true

- name: Copy startup script
  shell: "cp /tmp/dyndd/dyndd-{{dyndd_version}}/startupscripts/dyndd /etc/init.d/dyndd"
  become: true

- name: (Re)start dyndd service 
  service: 
    name=dyndd
    state=restarted 
    enabled=yes 
  become: true

